name: Deploy FastAPI + Vite App to EC2

on:
  push:
    branches:
      - main

env:
  # ✅ 수정된 부분: GitHub Secrets 이름과 일치하도록 변경
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_PASSWORD }}

  BACKEND_IMAGE_NAME: yourdockerhubid/chatbot-backend
  FRONTEND_IMAGE_NAME: yourdockerhubid/chatbot-frontend

  EC2_HOST: ${{ secrets.HOST }}
  EC2_USERNAME: ${{ secrets.USERNAME }}
  EC2_KEY: ${{ secrets.KEY }}
  SSH_PORT: 22

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          # ✅ 여기서도 env 대신
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Build and Push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.BACKEND_IMAGE_NAME }}:latest

      - name: Build and Push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.FRONTEND_IMAGE_NAME }}:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_KEY }}
          port: ${{ env.SSH_PORT }}
          script: |
            echo "--- Backend ---"
            docker pull ${{ env.BACKEND_IMAGE_NAME }}:latest
            docker stop chatbot-backend || true
            docker rm chatbot-backend || true
            docker run -d --restart always --name chatbot-backend -p 5000:5000 ${{ env.BACKEND_IMAGE_NAME }}:latest

            echo "--- Frontend ---"
            docker pull ${{ env.FRONTEND_IMAGE_NAME }}:latest
            docker stop chatbot-frontend || true
            docker rm chatbot-frontend || true
            docker run -d --restart always --name chatbot-frontend -p 5173:5173 ${{ env.FRONTEND_IMAGE_NAME }}:latest

            echo "--- Docker Cleanup ---"
            docker system prune -f
